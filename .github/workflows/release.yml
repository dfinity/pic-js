name: release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+b[0-9]+'

env:
  SCCACHE_GHA_ENABLED: 'true'
  RUSTC_WRAPPER: 'sccache'

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    outputs:
      is_beta: ${{ steps.is_beta.outputs.is_beta_tag }}
    environment:
      name: npm
      url: https://www.npmjs.com/package/@dfinity/pic
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: dfinity/ci-tools/actions/setup-python@main

      - name: Setup Commitizen
        uses: dfinity/ci-tools/actions/setup-commitizen@main

      - name: Setup PNPM
        uses: dfinity/ci-tools/actions/setup-pnpm@main

      - name: Determine if Beta Release
        id: is_beta
        uses: dfinity/ci-tools/actions/is-beta-tag@main

      - name: Build NPM packages
        run: pnpm build

      - name: Generate release notes
        uses: dfinity/ci-tools/actions/generate-release-notes@main

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
        run: |
          npm pack ./packages/pic/

          release_cmd="npm publish --verbose --access public"
          if [ "${{ steps.is_beta.outputs.is_beta_tag }}" = 'true' ]; then
            release_cmd="$release_cmd --tag beta"
          fi
          release_cmd="$release_cmd ./packages/pic/"
          $release_cmd

      - name: Create Github release
        uses: ncipollo/release-action@v1
        with:
          artifacts: 'dfinity-pic-${{ github.ref_name }}.tgz'
          bodyFile: 'RELEASE_NOTES.md'
          tag: '${{ github.ref_name }}'
          commit: 'main'
          prerelease: ${{ steps.is_beta.outputs.is_beta_tag == 'true' }}
          makeLatest: ${{ steps.is_beta.outputs.is_beta_tag == 'false' }}

  publish_docs:
    name: Publish Docs
    runs-on: ubuntu-latest
    needs: release
    environment: release
    if: ${{ needs.release.outputs.is_beta == 'false' }}
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: generate_token
        with:
          app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
          private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: icp-js-sdk-docs

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PNPM
        uses: dfinity/ci-tools/actions/setup-pnpm@main

      - uses: dfinity/ci-tools/actions/extract-version@main
        id: extract-version

      - name: Prepare version
        id: ver
        run: |
          echo "major_minor_version=v${{ steps.extract-version.outputs.major }}.${{ steps.extract-version.outputs.minor }}" >> $GITHUB_OUTPUT
          echo "major_minor_patch_version=v${{ steps.extract-version.outputs.major }}.${{ steps.extract-version.outputs.minor }}.${{ steps.extract-version.outputs.patch }}" >> $GITHUB_OUTPUT

      - name: Build docs for version ${{ steps.ver.outputs.major_minor_version }}
        working-directory: docs
        env:
          DOCS_VERSION: ${{ steps.ver.outputs.major_minor_version }}
        run: pnpm build

      - name: Build docs for version latest
        working-directory: docs
        env:
          DOCS_VERSION: latest
        run: pnpm build

      - name: Checkout icp-pages branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: icp-pages
          path: icp-pages

      - name: Assemble docs
        uses: dfinity/ci-tools/actions/assemble-docs@main
        with:
          assets_dir: 'docs/dist/${{ steps.ver.outputs.major_minor_version }}'
          version: ${{ steps.ver.outputs.major_minor_version }}
          target_dir: 'icp-pages'
          version_label: ${{ steps.ver.outputs.major_minor_version }}
          version_in_title: ${{ steps.ver.outputs.major_minor_patch_version }}

      - name: Assemble docs
        uses: dfinity/ci-tools/actions/assemble-docs@main
        with:
          assets_dir: 'docs/dist/latest'
          version: 'latest'
          target_dir: 'icp-pages'
          version_label: 'Latest (${{ steps.ver.outputs.major_minor_patch_version }})'

      - name: Submit Documentation
        uses: dfinity/ci-tools/actions/submit-docs@main
        with:
          destination_repo: 'dfinity/icp-js-sdk-docs'
          token: ${{ steps.generate_token.outputs.token }}
          target_dir: 'icp-pages'

  publish_docs_beta:
    name: Publish Docs Beta
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.is_beta == 'true' }}
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: generate_token
        with:
          app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
          private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: icp-js-sdk-docs

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup PNPM
        uses: dfinity/ci-tools/actions/setup-pnpm@main

      - name: Build docs for version beta
        working-directory: docs
        env:
          DOCS_VERSION: beta
        run: pnpm build

      - name: Checkout icp-pages branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: icp-pages
          path: icp-pages

      - name: Assemble docs
        uses: dfinity/ci-tools/actions/assemble-docs@main
        with:
          assets_dir: 'docs/dist/beta'
          version: 'beta'
          target_dir: 'icp-pages'

      - name: Submit Documentation
        uses: dfinity/ci-tools/actions/submit-docs@main
        with:
          destination_repo: 'dfinity/icp-js-sdk-docs'
          token: ${{ steps.generate_token.outputs.token }}
          target_dir: 'icp-pages'
